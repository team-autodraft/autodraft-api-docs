openapi: 3.0.3
info:
  title: Autodraft API Reference- OpenAPI 3.0
  description: |-
    Welcome to Autodraftâ€™s API! You can use this API to access all our API endpoints, such as the generate API to create text prompt to AI image generation, or the Tile Upsacle API to add creative upscale to image.

    The API is organized around REST. All requests should be made over SSL. All request and response bodies, including errors, are encoded in JSON.


  contact:
    email: team@autofraft.in
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Autodraft
  url: https://autodraft.in/blog
servers:
  - url: https://autodraft.in/prod
tags:
  - name: Project Data
  - name: Generate AI Images
  - name: Apply Transformations
  - name: Upscale
  - name: Generation Data
paths:
  /generate:
    get:
      tags:
        - Generate AI Images
      summary: Generate image from text prompt
      description: Text to Image API for generating AI images from user prompts.
      operationId: generate
      parameters:
        - name: prompt
          in: query
          description: Text prompt for which image will be generated
          required: true
          explode: true
          schema:
            type: string

        - name: projectId
          in: query
          description: Project Id against which the generation will be registered
          required: true
          explode: true
          schema:
            type: integer

        - name: modelId
          in: query
          description: AI Model which will be used to generate image, 10000 for semi-realistic model, 10001 for anime model and 10002 for comic model
          required: false
          explode: true
          schema:
            type: integer
            default: 10000
            enum:
              - 10000
              - 10001
              - 10002

        - name: email
          in: header
          description: 'email of user executing the generation'
          required: true
          schema:
            type: string

        - name: access-token
          in: header
          description: 'token of registered user'
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskData'

        '400':
          description: Invalid request parameter supplied
        '409':
          description: Insufficient generation balance
        '500':
          description: Server error
  /generateImgToImg:
    get:
      tags:
        - Generate AI Images
      summary: Generate Image from Image prompt
      description: Image to Image API for generating image from user prompt.
      operationId: generateImgToImg
      parameters:
        - name: imageUrl
          in: query
          description: Image url prompt for which result image will be generated
          required: true
          explode: true
          schema:
            type: string

        - name: projectId
          in: query
          description: Project Id against which the generation will be registered
          required: true
          explode: true
          schema:
            type: integer

        - name: modelId
          in: query
          description: AI Model which will be used to generate image, 10000 for semi-realistic model, 10001 for anime model and 10002 for comic model
          required: false
          explode: true
          schema:
            type: integer
            default: 10000
            enum:
              - 10000
              - 10001
              - 10002

        - name: email
          in: header
          description: 'email of user executing the generation'
          required: true
          schema:
            type: string

        - name: access-token
          in: header
          description: 'token of registered user'
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskData'

        '400':
          description: Invalid request parameter supplied
        '409':
          description: Insufficient generation balance
        '500':
          description: Server error
  /canny:
    get:
      tags:
        - Generate AI Images
      summary: Generate Canny Image from Image prompt
      description: API for edge detection and modification on user prompt.
      operationId: canny
      parameters:
        - name: imageUrl
          in: query
          description: Image url prompt for which result image will be generated
          required: true
          explode: true
          schema:
            type: string

        - name: projectId
          in: query
          description: Project Id against which the generation will be registered
          required: true
          explode: true
          schema:
            type: integer

        - name: modelId
          in: query
          description: AI Model which will be used to generate image, 10000 for semi-realistic model, 10001 for anime model and 10002 for comic model
          required: false
          explode: true
          schema:
            type: integer
            default: 10000
            enum:
              - 10000
              - 10001
              - 10002

        - name: email
          in: header
          description: 'email of user executing the generation'
          required: true
          schema:
            type: string

        - name: access-token
          in: header
          description: 'token of registered user'
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskData'

        '400':
          description: Invalid request parameter supplied
        '409':
          description: Insufficient generation balance
        '500':
          description: Server error
  /pose:
    get:
      tags:
        - Generate AI Images
      summary: Generate Pose Image from Image prompt
      description: API for pose detection and generation on user prompt.
      operationId: pose
      parameters:
        - name: imageUrl
          in: query
          description: Image url prompt for which result image will be generated
          required: true
          explode: true
          schema:
            type: string

        - name: projectId
          in: query
          description: Project Id against which the generation will be registered
          required: true
          explode: true
          schema:
            type: integer

        - name: modelId
          in: query
          description: AI Model which will be used to generate image, 10000 for semi-realistic model, 10001 for anime model and 10002 for comic model
          required: false
          explode: true
          schema:
            type: integer
            default: 10000
            enum:
              - 10000
              - 10001
              - 10002

        - name: email
          in: header
          description: 'email of user executing the generation'
          required: true
          schema:
            type: string

        - name: access-token
          in: header
          description: 'token of registered user'
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskData'

        '400':
          description: Invalid request parameter supplied
        '409':
          description: Insufficient generation balance
        '500':
          description: Server error
  /removebg:
    get:
      tags:
        - Apply Transformations
      summary: Generate Image without source background
      description: API for background detection and removal.
      operationId: removebg
      parameters:
        - name: imageUrl
          in: query
          description: Image url prompt for which result image will be generated
          required: true
          explode: true
          schema:
            type: string

        - name: projectId
          in: query
          description: Project Id against which the generation will be registered
          required: true
          explode: true
          schema:
            type: integer

        - name: modelId
          in: query
          description: AI Model which will be used to generate image, 10000 for semi-realistic model, 10001 for anime model and 10002 for comic model
          required: false
          explode: true
          schema:
            type: integer
            default: 10000
            enum:
              - 10000
              - 10001
              - 10002

        - name: email
          in: header
          description: 'email of user executing the generation'
          required: true
          schema:
            type: string

        - name: access-token
          in: header
          description: 'token of registered user'
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskData'

        '400':
          description: Invalid request parameter supplied
        '409':
          description: Insufficient generation balance
        '500':
          description: Server error
  /inpaint:
    get:
      tags:
        - Apply Transformations
      summary: Generate Image with user applied transformations.
      description: API for masking and transforming portion of the source image based on the the user prompt.
      operationId: inpaint
      parameters:
        - name: prompt
          in: query
          description: Text prompt for which image will be generated
          required: true
          explode: true
          schema:
            type: string

        - name: imageUrl
          in: query
          description: Source image url prompt for which result image will be generated
          required: true
          explode: true
          schema:
            type: string

        - name: maskImageUrl
          in: query
          description: Image url with masked area on which transformations will be applied
          required: true
          explode: true
          schema:
            type: string

        - name: projectId
          in: query
          description: Project Id against which the generation will be registered
          required: true
          explode: true
          schema:
            type: integer

        - name: modelId
          in: query
          description: AI Model which will be used to generate image, 10000 for semi-realistic model, 10001 for anime model and 10002 for comic model
          required: false
          explode: true
          schema:
            type: string
            default: 10000
            enum:
              - 10000
              - 10001
              - 10002

        - name: email
          in: header
          description: 'email of user executing the generation'
          required: true
          schema:
            type: string

        - name: access-token
          in: header
          description: 'token of registered user'
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskData'

        '400':
          description: Invalid request parameter supplied
        '409':
          description: Insufficient generation balance
        '500':
          description: Server error
  /objectRemove:
    get:
      tags:
        - Apply Transformations
      summary: Filter out parts of Image.
      description: API for marking and removing objects from the source image.
      operationId: objectRemove
      parameters:

        - name: imageUrl
          in: query
          description: Source image url prompt for which result image will be generated
          required: true
          explode: true
          schema:
            type: string

        - name: maskImageUrl
          in: query
          description: Image url with masked area on which transformations will be applied
          required: true
          explode: true
          schema:
            type: string

        - name: projectId
          in: query
          description: Project Id against which the generation will be registered
          required: true
          explode: true
          schema:
            type: integer

        - name: modelId
          in: query
          description: AI Model which will be used to generate image, 10000 for semi-realistic model, 10001 for anime model and 10002 for comic model
          required: false
          explode: true
          schema:
            type: integer
            default: 10000
            enum:
              - 10000
              - 10001
              - 10002

        - name: email
          in: header
          description: 'email of user executing the generation'
          required: true
          schema:
            type: string

        - name: access-token
          in: header
          description: 'token of registered user'
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskData'

        '400':
          description: Invalid request parameter supplied
        '409':
          description: Insufficient generation balance
        '500':
          description: Server error
  /upscaleImage:
    get:
      tags:
        - Upscale
      summary: Improve resolution of Source Image
      description: API for improving resolution of source image upto 4096.
      operationId: upscaleImage
      parameters:
        - name: imageUrl
          in: query
          description: Source image url prompt for which result image will be generated
          required: true
          explode: true
          schema:
            type: string

        - name: projectId
          in: query
          description: Project Id against which the generation will be registered
          required: true
          explode: true
          schema:
            type: integer

        - name: resizeDimension
          in: query
          description: Dimension to which source image will be upscaled
          required: false
          explode: true
          schema:
            default: 1024
            type: integer

        - name: modelId
          in: query
          description: AI Model which will be used to generate image, 10000 for semi-realistic model, 10001 for anime model and 10002 for comic model
          required: false
          explode: true
          schema:
            type: integer
            default: 10000
            enum:
              - 10000
              - 10001
              - 10002

        - name: email
          in: header
          description: 'email of user executing the generation'
          required: true
          schema:
            type: string

        - name: access-token
          in: header
          description: 'token of registered user'
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskData'

        '400':
          description: Invalid request parameter supplied
        '409':
          description: Insufficient generation balance
        '500':
          description: Server error
  /tileUpscale:
    get:
      tags:
        - Upscale
      summary: Add features to source image
      description: Enhances features, objects and adds creatives to source images based on user prompt.
      operationId: tileUpscale
      parameters:
        - name: imageUrl
          in: query
          description: Source image url prompt for which result image will be generated
          required: true
          explode: true
          schema:
            type: string

        - name: projectId
          in: query
          description: Project Id against which the generation will be registered
          required: true
          explode: true
          schema:
            type: integer

        - name: prompt
          in: query
          description: Text prompt for which creatives will be applied
          required: true
          explode: true
          schema:
            type: string

        - name: resizeDimension
          in: query
          description: Dimension to which source image will be upscaled
          required: false
          explode: true
          schema:
            default: 1024
            type: integer

        - name: modelId
          in: query
          description: AI Model which will be used to generate image, 10000 for semi-realistic model, 10001 for anime model and 10002 for comic model
          required: false
          explode: true
          schema:
            type: integer
            default: 10000
            enum:
              - 10000
              - 10001
              - 10002

        - name: email
          in: header
          description: 'email of user executing the generation'
          required: true
          schema:
            type: string

        - name: access-token
          in: header
          description: 'token of registered user'
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskData'

        '400':
          description: Invalid request parameter supplied
        '409':
          description: Insufficient generation balance
        '500':
          description: Server error
  /generation-history/{projectId}:
    get:
      tags:
        - Generation Data
      summary: Get generation history for user
      description: Paginated API to fetch user generation sorted by generation date in descending order
      operationId: generation-history
      parameters:
        - name: projectId
          in: path
          description: Project Id for which the generations will be fetched
          required: true
          explode: true
          schema:
            type: integer

        - name: offset
          in: query
          description: offset for paginated call
          required: true
          explode: true
          schema:
            type: integer
            default: 0

        - name: limit
          in: query
          description: limit for paginated call
          required: true
          explode: true
          schema:
            type: integer
            default: 10

        - name: access-token
          in: header
          description: 'token of registered user'
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerationList'

        '400':
          description: Invalid request parameter supplied
        '409':
          description: Insufficient generation balance
        '500':
          description: Server error
  /generation/{taskId}:
    get:
      tags:
        - Generation Data
      summary: Get generations for task
      description: API to fetch generations for a particular task
      operationId: generation-task
      parameters:
        - name: taskId
          in: path
          description: Task Id for which the generations will be fetched
          required: true
          explode: true
          schema:
            type: integer

        - name: access-token
          in: header
          description: 'token of registered user'
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerationObject'

        '400':
          description: Invalid request parameter supplied
        '409':
          description: Insufficient generation balance
        '500':
          description: Server error
  /project:
    post:
      tags:
        - Project Data
      summary: Create project for generations
      description: API to create project for user. Limited to 3 for non-subscription users and unlimited for users with subscription
      operationId: add-project
      requestBody:
        description: Project Data JSON body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectData'

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectData'
        '400':
          description: Invalid request parameter supplied
        '409':
          description: Insufficient generation balance
        '500':
          description: Server error
  /project/{projectId}:
    get:
      tags:
        - Project Data
      summary: Get project data for a given project Id
      description: API to get a particular project for the given project ID
      operationId: get-project
      parameters:

        - name: projectId
          in: path
          description: project Id for which the payload will be updated
          required: true
          explode: true
          schema:
            type: integer

        - name: access-token
          in: header
          description: 'token of registered user'
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectData'

        '400':
          description: Invalid request parameter supplied
        '409':
          description: Insufficient generation balance
        '500':
          description: Server error

    patch:
      tags:
        - Project Data
      summary: Update project parameters
      description: API to update project params for the given project ID for a particular user
      operationId: patch-project
      parameters:
        - name: projectId
          in: path
          description: project Id for which the payload will be updated
          required: true
          explode: true
          schema:
            type: integer

        - name: access-token
          in: header
          description: 'token of registered user'
          required: true
          schema:
            type: string

      requestBody:
        description: Project Data JSON body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectData'

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectData'

        '400':
          description: Invalid request parameter supplied
        '409':
          description: Insufficient generation balance
        '500':
          description: Server error
  /projects:
    get:
      tags:
        - Project Data
      summary: Get all projects for user
      description: API to get list of projects for user
      operationId: get-projects
      parameters:

        - name: access-token
          in: header
          description: 'token of registered user'
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectList'

        '400':
          description: Invalid request parameter supplied
        '409':
          description: Insufficient generation balance
        '500':
          description: Server error

components:
  schemas:
    ProjectData:
      required:
        - title
        - description
        - state
      type: object
      properties:
        title:
          type: string
          example: comics
        description:
          type: string
          example: my project to create comic frames
        state:
          type: string
          description: status of this project
          enum:
            - ACTIVE
            - INACTIVE
            - DELETED
        modelId:
          type: integer
          default: 10000
          enum:
            - 10000
            - 10001
            - 10002
        modelType:
          type: string
          default: BASE
          enum:
            - BASE
            - CUSTOM
            - AUTO

    ProjectList:
      description: List of project object
      type: array
      items:
        $ref: '#/components/schemas/ProjectData'

    TaskData:
      type: object
      properties:
        taskId:
          type: integer
          example: 658754
        promptImages:
          type: array
          items:
            type: string
            example: "https://comic-assets.s3.ap-south-1.amazonaws.com/crecoAI/426348_imgtoimg_0.png"

    AttributesData:
      description: Generation attributes
      type: object
      properties:
        style:
          type: integer
          description: id of the style applied
          example: 1000
        height:
          type: integer
          description: height of result image in pixels
          example: 512
        width:
          type: integer
          description: width of result image in pixels
          example: 512
        seed:
          type: number
          description: seed value for generation
          example: 4.8
        steps:
          type: integer
          description: steps used for generation between 0 - 100
          example: 70
        referenceImage:
          type: integer
          description: reference image used for generation
          example: "https://comic-assets.s3.ap-south-1.amazonaws.com/crecoAI/426348_imgtoimg_0.png"


    GenerationData:
      description: Generation payload
      type: object
      properties:
        imageUrl:
          type: string
          description: generated image url
          example: https://comic-assets.s3.ap-south-1.amazonaws.com/crecoAI/410743_2.png
        action:
          type: string
          description: action applied for generation
          enum:
            - IMAGE_TO_IMAGE
            - TEXT_TO_IMAGE
            - CANNY
            - POSE
            - REMOVE_BG
            - IN_PAINT
            - BACKGROUND_REMOVE
            - UPSCALE
            - TILE_UPSCALE
            - OBJECT_REMOVAL
        state:
          type: string
          description: state of the generation
          enum:
            - ACTIVE
            - INACTIVE
            - DELETED
        generated_at:
          type: string
          description: time of generation
          example: 2023-05-26T07:24:49
        generated_image_id:
          type: integer
          description: id of the generated image
          example: 40034105

    GenerationPayload:
      description: Generation List with configuration data
      type: object
      properties:
        sourceId:
          type: string
          description: reference of source generation
          example: 658754
        has_nsfw:
          type: integer
          description: if nsfw images are included
          enum:
            - 0
            - 1
        text:
          type: string
          description: user prompt for generation
          example: test
        image:
          type: string
          description: user image url for generation
          example: https://assets.pratilipicomics.com/crecoAI/_a4dbfef4-3fa2-4d4a-bc12-39778b435b06
        type:
          type: string
          description: generation type
          example: PROMPT_IMAGE
        state:
          type: string
          description: state of the generation
          enum:
            - INITIALISED
            - PROCESSING
            - FAILED
            - COMPLETED
        requested_at:
          type: string
          description: generation initialise time
          example: 2023-07-03T08:54:46
        attributes:
          $ref: '#/components/schemas/AttributesData'
        generations:
          description: List of generations
          type: array
          items:
            $ref: '#/components/schemas/GenerationData'



    GenerationList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GenerationPayload'
        total:
          description: total items in generation list
          type: integer
          example: 10
        nextSegment:
          description: next offset and limit for the paged call
          type: string
          example: offset=10&limit=10

    GenerationObject:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GenerationPayload'